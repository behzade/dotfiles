### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu 'rofi -modi combi -combi-modi window,run,drun,ssh -show combi -opacity 70 -show-icons'
set $theme 'dark'

### Clipboard manager
#
#
bindsym $mod+p exec copyq toggle
### Output configuration
#
# Wallpaper
output * bg /usr/share/wallpapers/gloom.jpg fill
#
# Example configuration:

#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
set $locker 'swaylock -f -e -c 1d2021 --inside-color 000000b3 -s fill -i /usr/share/wallpapers/rocket.png'
exec swayidle -w \
    timeout 600 $locker
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
  input "1267:12613:ASUE140C:00_04F3:3145_Touchpad" {
      dwt enabled
      tap enabled
      natural_scroll enabled
      middle_emulation enabled
  }
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym --to-code $mod+Return exec $term

    # Kill focused window
    bindsym --to-code $mod+Shift+q kill

    # Start your launcher
    bindsym --to-code $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym --to-code $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym --to-code $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    bindsym --to-code $mod+escape exec $locker 

    # Print screen and copy to clipboard
    bindsym --to-code $mod+Shift+s exec grim -g "$(slurp)" -  | wl-copy -t image/png
    bindsym --to-code Print exec grim - | wl-copy -t image/png
    
    bindsym --to-code $mod+t exec telegram-desktop

#
# Moving around:
#
    # Move your focus around
    bindsym --to-code $mod+$left focus left
    bindsym --to-code $mod+$down focus down
    bindsym --to-code $mod+$up focus up
    bindsym --to-code $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym --to-code $mod+Left focus left
    bindsym --to-code $mod+Down focus down
    bindsym --to-code $mod+Up focus up
    bindsym --to-code $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code $mod+Shift+$left move left
    bindsym --to-code $mod+Shift+$down move down
    bindsym --to-code $mod+Shift+$up move up
    bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym --to-code $mod+Shift+Left move left
    bindsym --to-code $mod+Shift+Down move down
    bindsym --to-code $mod+Shift+Up move up
    bindsym --to-code $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym --to-code $mod+1 workspace number 1
    bindsym --to-code $mod+2 workspace number 2
    bindsym --to-code $mod+3 workspace number 3
    bindsym --to-code $mod+4 workspace number 4
    bindsym --to-code $mod+5 workspace number 5
    bindsym --to-code $mod+6 workspace number 6
    bindsym --to-code $mod+7 workspace number 7
    bindsym --to-code $mod+8 workspace number 8
    bindsym --to-code $mod+9 workspace number 9
    bindsym --to-code $mod+0 workspace number 10
    bindsym --to-code $mod+q workspace browser
    # Move focused container to workspace
    bindsym --to-code $mod+Shift+1 move container to workspace number 1
    bindsym --to-code $mod+Shift+2 move container to workspace number 2
    bindsym --to-code $mod+Shift+3 move container to workspace number 3
    bindsym --to-code $mod+Shift+4 move container to workspace number 4
    bindsym --to-code $mod+Shift+5 move container to workspace number 5
    bindsym --to-code $mod+Shift+6 move container to workspace number 6
    bindsym --to-code $mod+Shift+7 move container to workspace number 7
    bindsym --to-code $mod+Shift+8 move container to workspace number 8
    bindsym --to-code $mod+Shift+9 move container to workspace number 9
    bindsym --to-code $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    bindsym --to-code $mod+tab workspace back_and_forth
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code $mod+b splith
    bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    bindsym --to-code $mod+s layout stacking
    bindsym --to-code $mod+w layout tabbed
    bindsym --to-code $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym --to-code $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym --to-code $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym --to-code $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym --to-code $mod+minus [app_id="dropdown1"] scratchpad show
    bindsym --to-code $mod+equal [app_id="dropdown2"] scratchpad show
    # bindsym --to-code F12 scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym --to-code Left resize shrink width 10px
    bindsym --to-code Down resize grow height 10px
    bindsym --to-code Up resize shrink height 10px
    bindsym --to-code Right resize grow width 10px

    # Return to default mode
    bindsym --to-code Return mode "default"
    bindsym --to-code Escape mode "default"
}
bindsym --to-code $mod+r mode "resize"


# Media keys
bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym --locked XF86MonBrightnessUp exec brightnessctl set +5%
bindsym --locked XF86AudioPlay exec "playerctl2 play-pause"
bindsym --locked XF86AudioNext exec "playerctl2 next"
bindsym --locked XF86AudioPrev exec "playerctl2 previous"

# Remove clutter
default_border none
default_floating_border none
font "JetBrains Mono NerdFont, FontAwesome, 14"
hide_edge_borders vertical
# Floating windows
for_window [app_id="com.github.hluk.copyq"] floating enable

# Specific Workspace for app
assign [class="firefox"] workspace browser
assign [app_id="firefox"] workspace browser
assign [app_id="org.telegram.desktop"] workspace 10
assign [app_id="Slack"] workspace 10
assign [class="Slack"] workspace 10
assign [title="^Skype$"] workspace 9
assign [class="Spotify"] workspace 9
assign [class="Steam"] workspace 8
assign [class="Insomnia"] workspace 3
assign [app_id="DBeaver"] workspace 2
assign [title=".*Dbeaver.*"] workspace 2

# Gap
gaps inner 5
smart_gaps on

# Keyboard
input "type:keyboard" {
    xkb_layout en-colon-swap,ir
    xkb_options grp:alt_shift_toggle
}

# Status Bar:
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top
    swaybar_command waybar

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
}

exec_always darkman set $theme
# #gtk3 themes
# set $gnome-schema org.gnome.desktop.interface
#
# exec_always {
#     gsettings set $gnome-schema gtk-theme Adwaita
#     gsettings set $gnome-schema icon-theme candy-icons
#     gsettings set $gnome-schema cursor-theme Adwaita
#     gsettings set $gnome-schema cursor-size 24
# }

# application startup
exec kanshi
exec gammastep
exec dunst
exec systembus-notify
exec keepassxc
exec copyq

exec telegram-desktop

exec firefox

workspace 1

exec_always systemd-run --property=Restart=always --user --unit dropdown1 $term -o background_opacity=0.9 --class dropdown1
for_window [app_id="dropdown1"] move container to scratchpad
exec_always systemd-run --property=Restart=always --user --unit dropdown2 $term -o background_opacity=0.9 --class dropdown2
for_window [app_id="dropdown2"] move container to scratchpad





include /etc/sway/config.d/*
